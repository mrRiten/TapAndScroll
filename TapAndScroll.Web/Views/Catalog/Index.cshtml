@{
}

@model TapAndScroll.Core.ViewModels.FilterProduct;

<div class="container-fluid mt-3">
    <div class="row justify-content-center">
        <!-- Filter Form -->
        <div class="col-md-3">
            <div class="card p-3">
                <h5 class="card-title">Фильтр товаров</h5>
                <form id="filterForm" asp-controller="Catalog" asp-action="Index" method="post">
                    <input asp-for="@Model.FilterUpload.CategoryId" value="@Model.Category.IdCategory" hidden="hidden" />
                    
                    <div class="mb-3">
                        <label asp-for="@Model.FilterUpload.Price" class="form-label">Ценовой диапазон</label>
                        <input name="Price" type="text" class="form-control product range" id="priceMin" placeholder="Цена от">
                        <input name="Price" type="text" class="form-control mt-1 product range" id="priceMax" placeholder="Цена до">
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.FilterUpload.Brand" for="brand" class="form-label">Бренд</label>
                        <input asp-for="@Model.FilterUpload.Brand" name="Brand" type="text" class="form-control product" id="brand" placeholder="Введите бренд">
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.FilterUpload.IsGaming" class="form-label">Игровой?</label>
                        <input name="IsGaming" type="checkbox" class="form-check-input radio-btn product">
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.FilterUpload.DiscountPercent" class="form-label">Скидка на товар в процентах</label>
                        <input name="DiscountPercent" class="form-control product range" placeholder="Скидка от">
                        <input name="DiscountPercent" class="form-control mt-1 product range" placeholder="Скидка до">
                    </div>

                    <input id="Parameters" asp-for="@Model.FilterUpload.AdditionalParameters" hidden="hidden" />

                    @foreach (var parameter in Model.Category.AdditionalParametersCategory)
                    {
                        <h3>@parameter.NameParameters</h3>
                        if (parameter.IsRange)
                        {
                            <div class="mb-3">
                                <label for="@parameter.SlugParameters" class="form-label">@parameter.NameParameters</label>
                                <input type="text" name="@parameter.SlugParameters" class="form-control product range" rows="2" placeholder="Введите @parameter.NameParameters от"></input>
                                <input type="text" name="@parameter.SlugParameters" class="form-control product range mt-1" rows="2" placeholder="Введите @parameter.NameParameters до"></input>
                            </div>
                        }
                        if (!parameter.IsRange)
                        {
                            <div class="mb-3">
                                <label for="@parameter.SlugParameters" class="form-label">@parameter.NameParameters</label>
                                <input type="text" name="@parameter.SlugParameters" class="form-control product" rows="2" placeholder="Введите @parameter.NameParameters"></input>
                            </div>
                        }
                    }

                    <button type="submit" class="btn btn-primary">Применить фильтр</button>
                </form>
            </div>
        </div>

        <div class="col-md-6">
            <div class="row flex-column">
                @if (Model.Products != null)
                {
                    foreach (var product in Model.Products)
                    {
                        <div class="col mb-3">
                            <div class="card">
                                <div class="row g-0">
                                    <div class="col-md-4 d-flex align-items-center">
                                        <img src="~/upload/@product.ImgsProduct.First().ImgPath" class="img-fluid rounded-start" alt="Card title" />
                                    </div>
                                    <div class="col-md-8">
                                        <div class="card-body">
                                            <h5 class="card-title">@product.ProductName</h5>
                                            <h5 class="card-title">@Model.Category.CategoryName</h5>
                                            <p class="card-text">@product.Description</p>
                                            <button type="button" class="btn btn-primary">Добавить в корзину</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

    </div>
</div>


<script>
    document.getElementById("filterForm").onsubmit = function () {
        let parameters = document.getElementById("Parameters");
        parameters.value = '';
        let inputs = document.querySelectorAll("input, textarea");
        for (let i = 1; i < inputs.length; i++) {
            if (inputs[i].id === "Parameters" || inputs[i].name === "__RequestVerificationToken" || inputs[i].name === "FilterUpload.CategoryId") {
                continue; // Skip the AdditionalParameters, __RequestVerificationToken and CategoryId inputs
            }
            if (inputs[i].classList.contains("range")) {
                if (inputs[i + 1] && inputs[i + 1].classList.contains("range") && inputs[i + 1].name === inputs[i].name) {
                    // Assign default value of 0 if input value is empty
                    const startValue = inputs[i].value || '0';
                    const endValue = inputs[i + 1].value || '0';
                    parameters.value += `${inputs[i].name}:${startValue}~${endValue},`;
                    i++; // Skip the next input as it has been processed
                } else {
                    // Assign default value of 0 if input value is empty
                    const singleValue = inputs[i].value || '0';
                    parameters.value += `${inputs[i].name}:${singleValue}~,`;
                }
            } 
            else {
                // Assign default value of 0 if input value is empty
                const value = inputs[i].value || '0';
                parameters.value += `${inputs[i].name}:${value},`;
            }
        }
        console.log(parameters.value);
    }
</script>

